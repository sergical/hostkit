/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GameJoinRouteImport } from './routes/game/join'
import { Route as AuthedDashboardRouteImport } from './routes/_authed/dashboard'
import { Route as GameGameIdResultsRouteImport } from './routes/game/$gameId.results'
import { Route as GameGameIdPlayRouteImport } from './routes/game/$gameId.play'
import { Route as GameGameIdLobbyRouteImport } from './routes/game/$gameId.lobby'
import { ServerRoute as ApiVoiceStreamServerRouteImport } from './routes/api/voice/stream'
import { ServerRoute as ApiVoiceIncomingServerRouteImport } from './routes/api/voice/incoming'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GameJoinRoute = GameJoinRouteImport.update({
  id: '/game/join',
  path: '/game/join',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedDashboardRoute = AuthedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRoute,
} as any)
const GameGameIdResultsRoute = GameGameIdResultsRouteImport.update({
  id: '/game/$gameId/results',
  path: '/game/$gameId/results',
  getParentRoute: () => rootRouteImport,
} as any)
const GameGameIdPlayRoute = GameGameIdPlayRouteImport.update({
  id: '/game/$gameId/play',
  path: '/game/$gameId/play',
  getParentRoute: () => rootRouteImport,
} as any)
const GameGameIdLobbyRoute = GameGameIdLobbyRouteImport.update({
  id: '/game/$gameId/lobby',
  path: '/game/$gameId/lobby',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiVoiceStreamServerRoute = ApiVoiceStreamServerRouteImport.update({
  id: '/api/voice/stream',
  path: '/api/voice/stream',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiVoiceIncomingServerRoute = ApiVoiceIncomingServerRouteImport.update({
  id: '/api/voice/incoming',
  path: '/api/voice/incoming',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/game/join': typeof GameJoinRoute
  '/game/$gameId/lobby': typeof GameGameIdLobbyRoute
  '/game/$gameId/play': typeof GameGameIdPlayRoute
  '/game/$gameId/results': typeof GameGameIdResultsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/game/join': typeof GameJoinRoute
  '/game/$gameId/lobby': typeof GameGameIdLobbyRoute
  '/game/$gameId/play': typeof GameGameIdPlayRoute
  '/game/$gameId/results': typeof GameGameIdResultsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_authed/dashboard': typeof AuthedDashboardRoute
  '/game/join': typeof GameJoinRoute
  '/game/$gameId/lobby': typeof GameGameIdLobbyRoute
  '/game/$gameId/play': typeof GameGameIdPlayRoute
  '/game/$gameId/results': typeof GameGameIdResultsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/game/join'
    | '/game/$gameId/lobby'
    | '/game/$gameId/play'
    | '/game/$gameId/results'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/game/join'
    | '/game/$gameId/lobby'
    | '/game/$gameId/play'
    | '/game/$gameId/results'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/_authed/dashboard'
    | '/game/join'
    | '/game/$gameId/lobby'
    | '/game/$gameId/play'
    | '/game/$gameId/results'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  GameJoinRoute: typeof GameJoinRoute
  GameGameIdLobbyRoute: typeof GameGameIdLobbyRoute
  GameGameIdPlayRoute: typeof GameGameIdPlayRoute
  GameGameIdResultsRoute: typeof GameGameIdResultsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/voice/incoming': typeof ApiVoiceIncomingServerRoute
  '/api/voice/stream': typeof ApiVoiceStreamServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/voice/incoming': typeof ApiVoiceIncomingServerRoute
  '/api/voice/stream': typeof ApiVoiceStreamServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/voice/incoming': typeof ApiVoiceIncomingServerRoute
  '/api/voice/stream': typeof ApiVoiceStreamServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$' | '/api/voice/incoming' | '/api/voice/stream'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$' | '/api/voice/incoming' | '/api/voice/stream'
  id: '__root__' | '/api/auth/$' | '/api/voice/incoming' | '/api/voice/stream'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiVoiceIncomingServerRoute: typeof ApiVoiceIncomingServerRoute
  ApiVoiceStreamServerRoute: typeof ApiVoiceStreamServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/join': {
      id: '/game/join'
      path: '/game/join'
      fullPath: '/game/join'
      preLoaderRoute: typeof GameJoinRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/game/$gameId/results': {
      id: '/game/$gameId/results'
      path: '/game/$gameId/results'
      fullPath: '/game/$gameId/results'
      preLoaderRoute: typeof GameGameIdResultsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$gameId/play': {
      id: '/game/$gameId/play'
      path: '/game/$gameId/play'
      fullPath: '/game/$gameId/play'
      preLoaderRoute: typeof GameGameIdPlayRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$gameId/lobby': {
      id: '/game/$gameId/lobby'
      path: '/game/$gameId/lobby'
      fullPath: '/game/$gameId/lobby'
      preLoaderRoute: typeof GameGameIdLobbyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/voice/stream': {
      id: '/api/voice/stream'
      path: '/api/voice/stream'
      fullPath: '/api/voice/stream'
      preLoaderRoute: typeof ApiVoiceStreamServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/voice/incoming': {
      id: '/api/voice/incoming'
      path: '/api/voice/incoming'
      fullPath: '/api/voice/incoming'
      preLoaderRoute: typeof ApiVoiceIncomingServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthedRouteChildren {
  AuthedDashboardRoute: typeof AuthedDashboardRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedDashboardRoute: AuthedDashboardRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  ResetPasswordRoute: ResetPasswordRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  GameJoinRoute: GameJoinRoute,
  GameGameIdLobbyRoute: GameGameIdLobbyRoute,
  GameGameIdPlayRoute: GameGameIdPlayRoute,
  GameGameIdResultsRoute: GameGameIdResultsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiVoiceIncomingServerRoute: ApiVoiceIncomingServerRoute,
  ApiVoiceStreamServerRoute: ApiVoiceStreamServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
